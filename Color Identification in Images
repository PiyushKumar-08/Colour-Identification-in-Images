#Color Identification in images

import cv2
import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans

def identify_colors(image_path, num_colors=3):
    image = cv2.imread(image_path)
    image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)


    pixels = image.reshape((-1, 3))

    kmeans = KMeans(n_clusters=num_colors, n_init=10)
    kmeans.fit(pixels)

    dominant_colors = kmeans.cluster_centers_.astype(int)

    return dominant_colors

def plot_colors(colors):
    plt.figure(figsize=(8, 2))
    for idx, color in enumerate(colors):
        color_patch = np.zeros((100, 100, 3), dtype=np.uint8)
        color_patch[:, :, :] = color
        plt.subplot(1, len(colors), idx + 1)
        plt.imshow(color_patch)
        plt.axis('off')
    plt.show()

if __name__ == "__main__":
    image_path = "C:\\Users\\Piyush Kumar\\Pictures\\major.jpg"
    num_colors = 5

    dominant_colors = identify_colors(image_path, num_colors)
    print("Dominant Colors (RGB):")
    print(dominant_colors)

    plot_colors(dominant_colors)

'''
output:
Dominant Colors (RGB):
[[ 69  70  69]
 [210 219 227]
 [ 20  24  23]
 [162 182 193]
 [116 135 144]]
'''
